{
  "openapi": "3.0.0",
  "info": {
    "title": "Taskosaur API",
    "description": "API for Taskosaur - Task Management Application",
    "version": "1.0.0",
    "contact": {
      "email": "info@taskosaur.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3001/api",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "auth",
      "description": "Authentication operations"
    },
    {
      "name": "users",
      "description": "User operations"
    },
    {
      "name": "roles",
      "description": "Role and permission operations (Detailed)"
    },
    {
      "name": "workspaces",
      "description": "Workspace management operations"
    },
    {
      "name": "projects",
      "description": "Project management operations"
    },
    {
      "name": "tasks",
      "description": "Task management operations"
    },
    {
      "name": "stats",
      "description": "Statistics retrieval"
    },
    {
      "name": "activities",
      "description": "Activity feed operations"
    },
    {
      "name": "members",
      "description": "Member retrieval (Simplified for Frontend)"
    },
    {
      "name": "deadlines",
      "description": "Deadline retrieval"
    },
    {
      "name": "search",
      "description": "Global search operations"
    },
    {
      "name": "notifications",
      "description": "Notification management"
    },
    {
      "name": "files",
      "description": "File attachment operations"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": ["auth"],
        "summary": "User login",
        "description": "Authenticate a user and return a token",
        "operationId": "login",
        "requestBody": {
          "description": "Login credentials",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["auth"],
        "summary": "User registration",
        "description": "Register a new user",
        "operationId": "register",
        "requestBody": {
          "description": "User registration details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "409": {
            "description": "Email already in use"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": ["auth"],
        "summary": "Refresh token",
        "description": "Refresh authentication token",
        "operationId": "refreshToken",
        "requestBody": {
          "description": "Refresh token",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid refresh token"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["auth"],
        "summary": "Logout",
        "description": "Invalidate the user's refresh token",
        "operationId": "logout",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Logged out successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": ["auth"],
        "summary": "Get current user",
        "description": "Get the currently authenticated user's profile",
        "operationId": "getCurrentUser",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "User profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": ["auth"],
        "summary": "Request password reset",
        "description": "Request a password reset email",
        "operationId": "requestPasswordReset",
        "requestBody": {
          "description": "Email address",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset email sent"
          },
          "404": {
            "description": "Email not found"
          }
        }
      }
    },
    "/auth/reset-password/{token}": {
      "post": {
        "tags": ["auth"],
        "summary": "Reset password",
        "description": "Reset password using a token",
        "operationId": "resetPassword",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Password reset token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New password",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully"
          },
          "400": {
            "description": "Invalid or expired token"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["users"],
        "summary": "Get all users",
        "description": "Returns all users the authenticated user has permission to view",
        "operationId": "getUsers",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          }
        }
      },
      "post": {
        "tags": ["users"],
        "summary": "Create user",
        "description": "Create a new user (Admin only)",
        "operationId": "createUser",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "description": "User to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "409": {
            "description": "Email already in use"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["users"],
        "summary": "Get user by ID",
        "description": "Returns a user by ID",
        "operationId": "getUserById",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": ["users"],
        "summary": "Update user",
        "description": "Update an existing user",
        "operationId": "updateUser",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "User details to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "User not found"
          },
          "409": {
            "description": "Email already in use"
          }
        }
      },
      "delete": {
        "tags": ["users"],
        "summary": "Delete user",
        "description": "Delete a user (Admin only)",
        "operationId": "deleteUser",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{id}/change-password": {
      "post": {
        "tags": ["users"],
        "summary": "Change user password",
        "description": "Change a user's password",
        "operationId": "changePassword",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Password change details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed successfully"
          },
          "400": {
            "description": "Invalid input or current password"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/members": {
      "get": {
        "tags": ["roles"],
        "summary": "Get workspace members (Detailed)",
        "description": "Get all members of a workspace with their detailed roles and permissions",
        "operationId": "getWorkspaceMembersDetailed",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "description": "ID of the workspace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of workspace members with roles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkspaceMember"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Workspace not found"
          }
        }
      },
      "post": {
        "tags": ["roles"],
        "summary": "Add workspace member (Detailed)",
        "description": "Add a member to a workspace with a role",
        "operationId": "addWorkspaceMemberDetailed",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "description": "ID of the workspace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Member details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddWorkspaceMemberRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Member added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceMember"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Workspace or user not found"
          },
          "409": {
            "description": "User is already a member"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/members/{userId}": {
      "get": {
        "tags": ["roles"],
        "summary": "Get workspace member (Detailed)",
        "description": "Get details of a specific workspace member",
        "operationId": "getWorkspaceMemberDetailed",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "description": "ID of the workspace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Workspace member details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceMember"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Workspace member not found"
          }
        }
      },
      "put": {
        "tags": ["roles"],
        "summary": "Update workspace member (Detailed)",
        "description": "Update a workspace member's role",
        "operationId": "updateWorkspaceMemberDetailed",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "description": "ID of the workspace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Member details to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWorkspaceMemberRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Workspace member updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceMember"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Workspace member not found"
          }
        }
      },
      "delete": {
        "tags": ["roles"],
        "summary": "Remove workspace member (Detailed)",
        "description": "Remove a member from a workspace",
        "operationId": "removeWorkspaceMemberDetailed",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "description": "ID of the workspace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Workspace member removed"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Workspace member not found"
          }
        }
      }
    },
    "/projects/{projectId}/members": {
      "get": {
        "tags": ["roles"],
        "summary": "Get project members (Detailed)",
        "description": "Get all members of a project with their roles",
        "operationId": "getProjectMembersDetailed",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of the project",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of project members with roles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectMember"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Project not found"
          }
        }
      },
      "post": {
        "tags": ["roles"],
        "summary": "Add project member (Detailed)",
        "description": "Add a member to a project with a role",
        "operationId": "addProjectMemberDetailed",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of the project",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Member details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddProjectMemberRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Member added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMember"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Project or user not found"
          },
          "409": {
            "description": "User is already a member"
          }
        }
      }
    },
    "/projects/{projectId}/members/{userId}": {
      "get": {
        "tags": ["roles"],
        "summary": "Get project member (Detailed)",
        "description": "Get details of a specific project member",
        "operationId": "getProjectMemberDetailed",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of the project",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project member details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMember"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Project member not found"
          }
        }
      },
      "put": {
        "tags": ["roles"],
        "summary": "Update project member (Detailed)",
        "description": "Update a project member's role",
        "operationId": "updateProjectMemberDetailed",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of the project",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Member details to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjectMemberRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Project member updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMember"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Project member not found"
          }
        }
      },
      "delete": {
        "tags": ["roles"],
        "summary": "Remove project member (Detailed)",
        "description": "Remove a member from a project",
        "operationId": "removeProjectMemberDetailed",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of the project",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Project member removed"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Project member not found"
          }
        }
      }
    },
    "/roles": {
      "get": {
        "tags": ["roles"],
        "summary": "Get all roles",
        "description": "Get all available roles in the system",
        "operationId": "getRoles",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of roles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/permissions": {
      "get": {
        "tags": ["roles"],
        "summary": "Get all permissions",
        "description": "Get all available permissions in the system",
        "operationId": "getPermissions",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/{userId}/permissions": {
      "get": {
        "tags": ["roles"],
        "summary": "Get user permissions",
        "description": "Get all permissions of a user",
        "operationId": "getUserPermissions",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPermissions"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/workspaces": {
      "get": {
        "tags": ["workspaces"],
        "summary": "Get all workspaces",
        "description": "Returns all workspaces the authenticated user has access to",
        "operationId": "getWorkspaces",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of workspaces",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Workspace"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": ["workspaces"],
        "summary": "Create workspace",
        "description": "Creates a new workspace",
        "operationId": "createWorkspace",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "description": "Workspace to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkspaceRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Workspace created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workspace"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Slug already in use" 
          }
        }
      }
    },
    "/workspaces/{slug}": {
      "get": {
        "tags": ["workspaces"],
        "summary": "Get workspace by slug",
        "description": "Returns a single workspace identified by its slug",
        "operationId": "getWorkspaceBySlug",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "Slug of the workspace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Workspace details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workspace"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Workspace not found"
          }
        }
      },
      "put": {
        "tags": ["workspaces"],
        "summary": "Update workspace",
        "description": "Updates an existing workspace",
        "operationId": "updateWorkspace",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "Slug of the workspace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Workspace details to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWorkspaceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Workspace updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workspace"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Workspace not found"
          },
          "409": {
            "description": "Slug already in use"
          }
        }
      },
      "delete": {
        "tags": ["workspaces"],
        "summary": "Delete workspace",
        "description": "Deletes a workspace",
        "operationId": "deleteWorkspace",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "Slug of the workspace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Workspace deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Workspace not found"
          }
        }
      }
    },
    "/projects": {
      "get": {
        "tags": ["projects"],
        "summary": "Get all projects",
        "description": "Returns all projects the authenticated user has access to, optionally filtered by workspace",
        "operationId": "getProjects",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "query",
            "description": "Optional ID of the workspace to filter projects",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
           {
            "name": "workspaceSlug",
            "in": "query",
            "description": "Optional slug of the workspace to filter projects",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of projects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": ["projects"],
        "summary": "Create project",
        "description": "Create a new project in a workspace",
        "operationId": "createProject",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "description": "Project to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Project created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "409": {
            "description": "Slug already in use"
          }
        }
      }
    },
    "/projects/{slug}": {
      "get": {
        "tags": ["projects"],
        "summary": "Get project by slug",
        "description": "Returns a single project identified by its slug",
        "operationId": "getProjectBySlug",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "Slug of the project",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Project not found"
          }
        }
      },
      "put": {
        "tags": ["projects"],
        "summary": "Update project",
        "description": "Update an existing project",
        "operationId": "updateProject",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "Slug of the project",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Project details to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjectRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Project updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Project not found"
          },
          "409": {
            "description": "Slug already in use"
          }
        }
      },
      "delete": {
        "tags": ["projects"],
        "summary": "Delete project",
        "description": "Delete a project",
        "operationId": "deleteProject",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "Slug of the project",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Project deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Project not found"
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "tags": ["tasks"],
        "summary": "Get all tasks",
        "description": "Returns all tasks the authenticated user has access to, optionally filtered by project",
        "operationId": "getTasks",
        "security": [{ "bearerAuth": [] }],
         "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "description": "Optional ID of the project to filter tasks",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
           {
            "name": "projectSlug",
            "in": "query",
            "description": "Optional slug of the project to filter tasks",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of tasks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": ["tasks"],
        "summary": "Create task",
        "description": "Create a new task",
        "operationId": "createTask",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "description": "Task to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "tags": ["tasks"],
        "summary": "Get task by ID",
        "description": "Returns a task by ID",
        "operationId": "getTaskById",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the task",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Task not found"
          }
        }
      },
      "put": {
        "tags": ["tasks"],
        "summary": "Update task",
        "description": "Update an existing task",
        "operationId": "updateTask",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the task",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Task details to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Task not found"
          }
        }
      },
      "delete": {
        "tags": ["tasks"],
        "summary": "Delete task",
        "description": "Delete a task",
        "operationId": "deleteTask",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the task",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Task deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Task not found"
          }
        }
      }
    },
     "/tasks/{id}/tags": {
       "patch": {
         "tags": ["tasks"],
         "summary": "Update task tags",
         "description": "Updates the tags associated with a specific task",
         "operationId": "updateTaskTags",
         "security": [{ "bearerAuth": [] }],
         "parameters": [
           {
             "name": "id",
             "in": "path",
             "description": "ID of the task",
             "required": true,
             "schema": {
               "type": "string"
             }
           }
         ],
         "requestBody": {
           "description": "Array of tags to associate with the task",
           "required": true,
           "content": {
             "application/json": {
               "schema": {
                 "$ref": "#/components/schemas/UpdateTaskTagsRequest"
               }
             }
           }
         },
         "responses": {
           "200": {
             "description": "Tags updated successfully",
             "content": {
               "application/json": {
                 "schema": {
                   "$ref": "#/components/schemas/Task"
                 }
               }
             }
           },
           "400": {
             "description": "Invalid input"
           },
           "401": {
             "description": "Unauthorized"
           },
           "403": {
             "description": "Forbidden - Insufficient permissions"
           },
           "404": {
             "description": "Task not found"
           }
         }
       }
     },
     "/tasks/{taskId}/subtasks": {
       "get": {
         "tags": ["tasks"],
         "summary": "Get subtasks",
         "description": "Get all subtasks for a task",
         "operationId": "getSubtasks",
         "security": [{ "bearerAuth": [] }],
         "parameters": [
           {
             "name": "taskId",
             "in": "path",
             "description": "ID of the parent task",
             "required": true,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "description": "List of subtasks",
             "content": {
               "application/json": {
                 "schema": {
                   "type": "array",
                   "items": {
                     "$ref": "#/components/schemas/Task"
                   }
                 }
               }
             }
           },
           "401": {
             "description": "Unauthorized"
           },
           "403": {
             "description": "Forbidden - Insufficient permissions"
           },
           "404": {
             "description": "Task not found"
           }
         }
       },
       "post": {
         "tags": ["tasks"],
         "summary": "Create subtask",
         "description": "Creates a new subtask for a task",
         "operationId": "createSubtask",
         "security": [{ "bearerAuth": [] }],
         "parameters": [
           {
             "name": "taskId",
             "in": "path",
             "description": "ID of the parent task",
             "required": true,
             "schema": {
               "type": "string"
             }
           }
         ],
         "requestBody": {
           "description": "Subtask to create",
           "required": true,
           "content": {
             "application/json": {
               "schema": {
                 "$ref": "#/components/schemas/CreateTaskRequest"
               }
             }
           }
         },
         "responses": {
           "201": {
             "description": "Subtask created",
             "content": {
               "application/json": {
                 "schema": {
                   "$ref": "#/components/schemas/Task"
                 }
               }
             }
           },
           "400": {
             "description": "Invalid input"
           },
           "401": {
             "description": "Unauthorized"
           },
           "403": {
             "description": "Forbidden - Insufficient permissions"
           },
           "404": {
             "description": "Parent task not found"
           }
         }
       }
     },
    "/stats": {
      "get": {
        "tags": ["stats"],
        "summary": "Get statistics",
        "description": "Returns key statistics for the dashboard",
        "operationId": "getStats",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of statistics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Stat"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/activities": {
      "get": {
        "tags": ["activities"],
        "summary": "Get general activities",
        "description": "Returns a feed of general activities across accessible areas",
        "operationId": "getActivities",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of activities",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Activity"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/workspaces/{workspaceSlug}/activities": {
      "get": {
        "tags": ["activities"],
        "summary": "Get workspace activities",
        "description": "Returns a feed of activities specific to a workspace",
        "operationId": "getWorkspaceActivities",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "workspaceSlug",
            "in": "path",
            "description": "Slug of the workspace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of workspace activities",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Activity"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Workspace not found"
          }
        }
      }
    },
    "/members": {
      "get": {
        "tags": ["members"],
        "summary": "Get members (Simplified)",
        "description": "Returns a simplified list of members (e.g., for assignment dropdowns)",
        "operationId": "getMembers",
        "security": [{ "bearerAuth": [] }],
         "parameters": [
          {
            "name": "workspaceId",
            "in": "query",
            "description": "Optional ID of the workspace to filter members",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
           {
            "name": "projectId",
            "in": "query",
            "description": "Optional ID of the project to filter members",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of members",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Member"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/deadlines": {
      "get": {
        "tags": ["deadlines"],
        "summary": "Get deadlines",
        "description": "Returns upcoming deadlines for projects and tasks",
        "operationId": "getDeadlines",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of deadlines",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Deadline"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/tags": {
      "get": {
        "tags": ["tags"],
        "summary": "Get all tags",
        "description": "Retrieves all tags",
        "operationId": "getTags",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "query",
            "description": "Optional ID of the workspace to filter tags",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspaceSlug",
            "in": "query",
            "description": "Optional slug of the workspace to filter tags",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of tags",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": ["tags"],
        "summary": "Create tag",
        "description": "Creates a new tag",
        "operationId": "createTag",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "description": "Tag to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTagRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tag created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Tag with same name already exists"
          }
        }
      }
    },
    "/tags/{id}": {
      "put": {
        "tags": ["tags"],
        "summary": "Update tag",
        "description": "Updates an existing tag",
        "operationId": "updateTag",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the tag",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Tag details to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTagRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tag updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Tag not found"
          },
          "409": {
            "description": "Tag with same name already exists"
          }
        }
      },
      "delete": {
        "tags": ["tags"],
        "summary": "Delete tag",
        "description": "Deletes a tag",
        "operationId": "deleteTag",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the tag",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Tag deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Tag not found"
          }
        }
      }
    },
    "/search": {
      "get": {
        "tags": ["search"],
        "summary": "Global search",
        "description": "Search across workspaces, projects, tasks, and users",
        "operationId": "globalSearch",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Search query term",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "types",
            "in": "query",
            "description": "Resource types to include in search",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["workspaces", "projects", "tasks", "users"]
              }
            }
          },
          {
            "name": "workspaceId",
            "in": "query",
            "description": "Optional workspace ID to limit search scope",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResults" 
                }
              }
            }
          },
          "400": {
            "description": "Invalid search parameters"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/notifications": {
      "get": {
        "tags": ["notifications"],
        "summary": "Get notifications",
        "description": "Get current user's notifications",
        "operationId": "getNotifications",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "unreadOnly",
            "in": "query",
            "description": "Only return unread notifications",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of notifications to return",
            "schema": {
              "type": "integer",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of notifications",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/notifications/{id}/read": {
      "patch": {
        "tags": ["notifications"],
        "summary": "Mark notification as read",
        "description": "Mark a notification as read",
        "operationId": "markNotificationRead",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the notification",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notification marked as read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Notification not found"
          }
        }
      }
    },
    "/notifications/read-all": {
      "post": {
        "tags": ["notifications"],
        "summary": "Mark all notifications as read",
        "description": "Mark all notifications as read for the current user",
        "operationId": "markAllNotificationsRead",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "All notifications marked as read"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/files": {
      "post": {
        "tags": ["files"],
        "summary": "Upload file",
        "description": "Upload a file attachment",
        "operationId": "uploadFile",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "resourceType": {
                    "type": "string",
                    "enum": ["task", "project", "workspace"]
                  },
                  "resourceId": {
                    "type": "string"
                  }
                },
                "required": ["file", "resourceType", "resourceId"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "File uploaded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "413": {
            "description": "File too large"
          }
        }
      },
      "get": {
        "tags": ["files"],
        "summary": "List files",
        "description": "List files for a specific resource",
        "operationId": "listFiles",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "resourceType",
            "in": "query",
            "description": "Type of resource",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["task", "project", "workspace"]
            }
          },
          {
            "name": "resourceId",
            "in": "query",
            "description": "ID of the resource",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of files",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          }
        }
      }
    },
    "/files/{id}": {
      "get": {
        "tags": ["files"],
        "summary": "Download file",
        "description": "Download a file attachment",
        "operationId": "downloadFile",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the file",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File content",
            "content": {
              "application/octet-stream": {}
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "File not found"
          }
        }
      },
      "delete": {
        "tags": ["files"],
        "summary": "Delete file",
        "description": "Delete a file attachment",
        "operationId": "deleteFile",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the file",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "File deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "File not found"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "SearchResults": {
        "type": "object",
        "properties": {
          "workspaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Workspace"
            }
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Project"
            }
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "total": {
            "type": "integer",
            "example": 15
          }
        }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "notif-123"
          },
          "type": {
            "type": "string",
            "example": "task_assigned",
            "enum": ["task_assigned", "mention", "due_soon", "project_invite", "workspace_invite", "task_completed"]
          },
          "title": {
            "type": "string",
            "example": "Task assigned to you"
          },
          "message": {
            "type": "string",
            "example": "John Doe assigned you a task: Implement login page"
          },
          "sender": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "user-456"
              },
              "name": {
                "type": "string",
                "example": "John Doe"
              },
              "avatar": {
                "type": "string",
                "format": "url",
                "example": "https://example.com/avatar.png"
              }
            }
          },
          "resourceType": {
            "type": "string",
            "example": "task",
            "enum": ["task", "project", "workspace", "comment"]
          },
          "resourceId": {
            "type": "string",
            "example": "task-789"
          },
          "read": {
            "type": "boolean",
            "example": false
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-05-10T14:30:00Z"
          }
        }
      },
      "File": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "file-123"
          },
          "filename": {
            "type": "string",
            "example": "document.pdf"
          },
          "originalFilename": {
            "type": "string",
            "example": "important-document.pdf"
          },
          "mimeType": {
            "type": "string",
            "example": "application/pdf"
          },
          "size": {
            "type": "integer",
            "example": 2048576
          },
          "resourceType": {
            "type": "string",
            "example": "task",
            "enum": ["task", "project", "workspace"]
          },
          "resourceId": {
            "type": "string",
            "example": "task-456"
          },
          "uploadedBy": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "user-123"
              },
              "name": {
                "type": "string",
                "example": "John Doe"
              }
            }
          },
          "url": {
            "type": "string",
            "format": "url",
            "example": "https://api.example.com/files/file-123"
          },
          "thumbnailUrl": {
            "type": "string",
            "format": "url",
            "nullable": true,
            "example": "https://api.example.com/files/file-123/thumbnail"
          },
          "uploadedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-05-15T09:30:00Z"
          }
        }
      },
      "CreateWorkspaceRequest": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Marketing Team"
          },
          "description": {
            "type": "string",
            "example": "Workspace for the marketing department"
          },
          "slug": {
            "type": "string",
            "example": "marketing-team"
          }
        }
      },
      "UpdateWorkspaceRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Updated Marketing Team"
          },
          "description": {
            "type": "string", 
            "example": "Updated description for the marketing department"
          },
          "avatar": {
            "type": "string",
            "format": "url",
            "example": "https://example.com/avatar.png"
          }
        }
      },
      "CreateProjectRequest": {
        "type": "object",
        "required": ["name", "workspaceId"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Q2 Campaign"
          },
          "description": {
            "type": "string",
            "example": "Marketing campaign for Q2"
          },
          "workspaceId": {
            "type": "string",
            "example": "ws-123"
          },
          "slug": {
            "type": "string",
            "example": "q2-campaign"
          }
        }
      },
      "UpdateProjectRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Updated Q2 Campaign"
          },
          "description": {
            "type": "string",
            "example": "Updated description for Q2 campaign"
          },
          "avatar": {
            "type": "string",
            "format": "url",
            "example": "https://example.com/project-avatar.png"
          }
        }
      },
      "CreateTagRequest": {
        "type": "object",
        "required": ["name", "color"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Bug"
          },
          "color": {
            "type": "string",
            "example": "red"
          },
          "workspaceId": {
            "type": "string",
            "example": "ws-123"
          }
        }
      },
      "UpdateTagRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Updated Bug"
          },
          "color": {
            "type": "string",
            "example": "blue"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "password123"
          },
          "rememberMe": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "RefreshTokenRequest": {
        "type": "object",
        "required": ["refreshToken"],
        "properties": {
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        }
      },
      "RegisterRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "password123"
          }
        }
      },
      "PasswordResetRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          }
        }
      },
      "NewPasswordRequest": {
        "type": "object",
        "required": ["password", "confirmPassword"],
        "properties": {
          "password": {
            "type": "string",
            "format": "password",
            "example": "newPassword123"
          },
          "confirmPassword": {
            "type": "string",
            "format": "password",
            "example": "newPassword123"
          }
        }
      },
      "ChangePasswordRequest": {
        "type": "object",
        "required": ["currentPassword", "newPassword", "confirmPassword"],
        "properties": {
          "currentPassword": {
            "type": "string",
            "format": "password",
            "example": "currentPassword123"
          },
          "newPassword": {
            "type": "string",
            "format": "password",
            "example": "newPassword123"
          },
          "confirmPassword": {
            "type": "string",
            "format": "password",
            "example": "newPassword123"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "user-123"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "avatar": {
            "type": "string",
            "format": "url",
            "nullable": true,
            "example": "https://example.com/avatar.png"
          },
          "role": {
            "type": "string",
            "example": "User",
            "enum": ["Admin", "User"]
          },
          "status": {
            "type": "string",
            "example": "Active",
            "enum": ["Active", "Inactive", "Pending"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-04-10T10:30:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-04-15T14:30:00Z"
          }
        }
      },
      "CreateUserRequest": {
        "type": "object",
        "required": ["name", "email", "password", "role"],
        "properties": {
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "password123"
          },
          "role": {
            "type": "string",
            "example": "User",
            "enum": ["Admin", "User"]
          }
        }
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "avatar": {
            "type": "string",
            "format": "url",
            "nullable": true,
            "example": "https://example.com/avatar.png"
          },
          "role": {
            "type": "string",
            "example": "User",
            "enum": ["Admin", "User"]
          },
          "status": {
            "type": "string",
            "example": "Active",
            "enum": ["Active", "Inactive"]
          }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "role-123"
          },
          "name": {
            "type": "string",
            "example": "Admin"
          },
          "description": {
            "type": "string",
            "example": "Administrator role with full access"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permission"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-04-10T10:30:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-04-15T14:30:00Z"
          }
        }
      },
      "Permission": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "permission-123"
          },
          "name": {
            "type": "string",
            "example": "workspace:create"
          },
          "description": {
            "type": "string",
            "example": "Permission to create workspaces"
          },
          "resource": {
            "type": "string",
            "example": "workspace"
          },
          "action": {
            "type": "string",
            "example": "create"
          }
        }
      },
      "WorkspaceMember": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "workspace-member-123"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "workspace": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "workspace-123"
              },
              "name": {
                "type": "string",
                "example": "My Workspace"
              },
              "slug": {
                "type": "string",
                "example": "my-workspace"
              }
            }
          },
          "role": {
            "type": "string",
            "example": "Owner",
            "enum": ["Owner", "Admin", "Member", "Guest"]
          },
          "joinedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-04-15T14:30:00Z"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permission"
            }
          }
        }
      },
      "AddWorkspaceMemberRequest": {
        "type": "object",
        "required": ["userId", "role"],
        "properties": {
          "userId": {
            "type": "string",
            "example": "user-123"
          },
          "role": {
            "type": "string",
            "example": "Member",
            "enum": ["Admin", "Member", "Guest"]
          }
        }
      },
      "UpdateWorkspaceMemberRequest": {
        "type": "object",
        "required": ["role"],
        "properties": {
          "role": {
            "type": "string",
            "example": "Admin",
            "enum": ["Admin", "Member", "Guest"]
          }
        }
      },
      "ProjectMember": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "project-member-123"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "project": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "project-123"
              },
              "name": {
                "type": "string",
                "example": "My Project"
              },
              "slug": {
                "type": "string",
                "example": "my-project"
              },
              "workspace": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "workspace-123"
                  },
                  "name": {
                    "type": "string",
                    "example": "My Workspace"
                  },
                  "slug": {
                    "type": "string",
                    "example": "my-workspace"
                  }
                }
              }
            }
          },
          "role": {
            "type": "string",
            "example": "Manager",
            "enum": ["Manager", "Member", "Viewer"]
          },
          "joinedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-04-15T14:30:00Z"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permission"
            }
          }
        }
      },
      "AddProjectMemberRequest": {
        "type": "object",
        "required": ["userId", "role"],
        "properties": {
          "userId": {
            "type": "string",
            "example": "user-123"
          },
          "role": {
            "type": "string",
            "example": "Member",
            "enum": ["Manager", "Member", "Viewer"]
          }
        }
      },
      "UpdateProjectMemberRequest": {
        "type": "object",
        "required": ["role"],
        "properties": {
          "role": {
            "type": "string",
            "example": "Manager",
            "enum": ["Manager", "Member", "Viewer"]
          }
        }
      },
      "UserPermissions": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "example": "user-123"
          },
          "systemPermissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permission"
            },
            "description": "System-wide permissions"
          },
          "workspacePermissions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "workspace": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "workspace-123"
                    },
                    "name": {
                      "type": "string",
                      "example": "My Workspace"
                    }
                  }
                },
                "role": {
                  "type": "string",
                  "example": "Owner"
                },
                "permissions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              }
            },
            "description": "Workspace-specific permissions"
          },
          "projectPermissions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "project": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "project-123"
                    },
                    "name": {
                      "type": "string",
                      "example": "My Project"
                    },
                    "workspace": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "workspace-123"
                        },
                        "name": {
                          "type": "string",
                          "example": "My Workspace"
                        }
                      }
                    }
                  }
                },
                "role": {
                  "type": "string",
                  "example": "Manager"
                },
                "permissions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              }
            },
            "description": "Project-specific permissions"
          }
        }
      },
      "Workspace": {
        "type": "object",
        "required": ["id", "slug", "name", "description", "projectCount", "memberCount", "recentActivity"],
        "properties": {
          "id": {
            "type": "string",
            "example": "ws-abc"
          },
          "slug": {
            "type": "string",
            "example": "my-cool-workspace"
          },
          "name": {
            "type": "string",
            "example": "My Cool Workspace"
          },
          "description": {
            "type": "string",
            "example": "This is a description of the workspace."
          },
          "projectCount": {
            "type": "integer",
            "example": 5
          },
          "memberCount": {
            "type": "integer",
            "example": 12
          },
          "recentActivity": {
            "type": "string",
            "example": "Task 'Deploy to Prod' updated 2 hours ago"
          },
          "avatar": {
            "type": "string",
            "format": "url",
            "nullable": true,
            "example": "https://example.com/workspace-avatar.png"
          }
        }
      },
      "Project": {
        "type": "object",
        "required": ["id", "name", "slug", "workspace"],
        "properties": {
          "id": {
            "type": "string",
            "example": "proj-xyz"
          },
          "name": {
            "type": "string",
            "example": "Frontend Refactor"
          },
          "slug": {
            "type": "string",
            "example": "frontend-refactor"
          },
          "avatar": {
            "type": "string",
            "format": "url",
            "nullable": true,
            "example": "https://example.com/project-avatar.png"
          },
          "workspace": {
            "type": "object",
            "required": ["id", "slug", "name"],
            "properties": {
               "id": {
                "type": "string",
                "example": "ws-abc"
              },
              "slug": {
                "type": "string",
                "example": "my-cool-workspace"
              },
              "name": {
                "type": "string",
                "example": "My Cool Workspace"
              }
            }
          }
        }
      },
      "Tag": {
        "type": "object",
        "required": ["id", "name", "color"],
        "properties": {
          "id": {
            "type": "string",
            "example": "tag-1"
          },
          "name": {
            "type": "string",
            "example": "Bug"
          },
          "color": {
            "type": "string",
            "example": "#FF0000"
          }
        }
      },
      "Task": {
        "type": "object",
        "required": ["id", "title", "status", "priority", "project", "createdAt"],
        "properties": {
          "id": {
            "type": "string",
            "example": "task-123"
          },
          "title": {
            "type": "string",
            "example": "Implement user authentication"
          },
          "status": {
            "type": "string",
            "enum": ["Todo", "In Progress", "Review", "Done"],
            "example": "In Progress"
          },
          "priority": {
            "type": "string",
            "enum": ["Low", "Medium", "High"],
            "example": "High"
          },
          "assignee": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "example": "Jane Doe" },
                  "avatar": { "type": "string", "format": "url", "example": "https://example.com/jane.png" }
                }
              },
              { "type": "string", "example": "Unassigned" },
              { "type": "null" }
            ],
            "nullable": true,
            "description": "Can be an object with name/avatar, a string (e.g., 'Unassigned'), or null"
          },
          "project": {
            "type": "string",
            "description": "ID or slug of the project this task belongs to",
            "example": "proj-xyz"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2023-05-15T14:30:00Z"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-04-10T10:30:00Z"
          },
           "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2023-05-01T09:00:00Z"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2023-05-10T17:00:00Z"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "Detailed description of the task requirements."
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "nullable": true
          }
        }
      },
      "CreateTaskRequest": {
        "type": "object",
        "required": ["title", "projectId"],
        "properties": {
          "title": {
            "type": "string",
            "example": "Complete project documentation"
          },
          "projectId": {
             "type": "string",
             "description": "ID of the project to associate the task with",
             "example": "proj-xyz"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "Write comprehensive documentation..."
          },
          "status": {
            "type": "string",
            "enum": ["Todo", "In Progress", "Review", "Done"],
            "default": "Todo",
            "example": "Todo"
          },
          "priority": {
            "type": "string",
            "enum": ["Low", "Medium", "High"],
            "default": "Medium",
            "example": "Medium"
          },
          "assigneeId": {
             "type": "string",
             "nullable": true,
             "description": "ID of the user to assign the task to",
             "example": "user-456"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2023-05-15T14:30:00Z"
          },
           "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of tag names or IDs to associate",
            "example": ["Bug", "Frontend"]
          }
        }
      },
      "UpdateTaskRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Complete project documentation"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "Write comprehensive documentation..."
          },
          "status": {
            "type": "string",
            "enum": ["Todo", "In Progress", "Review", "Done"],
            "example": "In Progress"
          },
          "priority": {
            "type": "string",
            "enum": ["Low", "Medium", "High"],
            "example": "High"
          },
           "assigneeId": {
             "type": "string",
             "nullable": true,
             "description": "ID of the user to assign the task to (null to unassign)",
             "example": "user-789"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2023-05-20T17:00:00Z"
          },
           "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of tag names or IDs to associate (replaces existing tags)",
            "example": ["Documentation", "High Priority"]
          }
        }
      },
      "UpdateTaskTagsRequest": {
        "type": "object",
        "required": ["tags"],
        "properties": {
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of tag names or IDs to associate with the task (replaces existing tags)",
            "example": ["UI", "Refactor"]
          }
        }
      },
      "Stat": {
        "type": "object",
        "required": ["name", "value"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Tasks Completed"
          },
          "value": {
            "type": "string",
            "example": "125"
          }
        }
      },
      "Activity": {
        "type": "object",
        "required": ["id", "user", "action", "target", "time"],
        "properties": {
          "id": {
            "type": "string",
            "example": "act-1"
          },
          "user": {
            "type": "string",
            "example": "John Doe"
          },
          "action": {
            "type": "string",
            "example": "updated task"
          },
          "target": {
            "type": "string",
            "example": "Implement dark mode"
          },
          "time": {
            "type": "string",
            "example": "2 hours ago"
          },
          "workspace": {
            "type": "string",
            "nullable": true,
            "description": "Slug of the workspace if applicable",
            "example": "my-cool-workspace"
          }
        }
      },
      "Member": {
        "type": "object",
        "required": ["id", "name", "role", "avatar"],
        "properties": {
          "id": {
            "type": "string",
            "example": "user-456"
          },
          "name": {
            "type": "string",
            "example": "Alice Smith"
          },
          "role": {
            "type": "string",
            "example": "Developer"
          },
          "avatar": {
            "type": "string",
            "format": "url",
            "example": "https://example.com/alice.png"
          }
        }
      },
      "Deadline": {
        "type": "object",
        "required": ["id", "title", "type", "dueDate", "daysLeft", "progress"],
        "properties": {
          "id": {
            "type": "string",
            "example": "deadline-proj-1"
          },
          "title": {
            "type": "string",
            "example": "Launch Marketing Campaign"
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "description": "Slug of the project or task if applicable",
            "example": "marketing-campaign"
          },
          "type": {
            "type": "string",
            "enum": ["project", "task"],
            "example": "project"
          },
          "workspace": {
            "type": "string",
            "nullable": true,
            "description": "Name of the workspace if applicable",
            "example": "Marketing Dept"
          },
          "workspaceSlug": {
            "type": "string",
            "nullable": true,
            "description": "Slug of the workspace if applicable",
            "example": "marketing-dept"
          },
          "projectSlug": {
            "type": "string",
            "nullable": true,
            "description": "Slug of the project if applicable",
            "example": "q2-campaign"
          },
          "dueDate": {
            "type": "string",
            "format": "date",
            "example": "2023-06-30"
          },
          "daysLeft": {
            "type": "integer",
            "example": 5
          },
          "progress": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 100,
            "example": 75
          }
        }
      }
    }
  }
}
